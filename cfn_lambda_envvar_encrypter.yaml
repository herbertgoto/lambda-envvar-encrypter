AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  ParamS3Bucket:
    Description: The S3 Bucket that holds the lambda code
    Type: String
  ParamS3Key:
    Description: The S3 key for the encryption lambda code zip file
    Type: String
  ParamVarToEncrypt:
    Description: The variable to encrypt
    Type: String
    NoEcho: true
Resources:
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "CMK to encrypt lambda variables"
      Enabled: true
      KeyPolicy:
        Version: 2012-10-17
        Id: key-lambda-varenvs-encryption
        Statement:
          - Sid: "Enable IAM User Permissions"
            Effect: "Allow"
            Principal:
              AWS: !Join 
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':root'
            Action: "kms:*"
            Resource: "*"
  LambdaEncryptionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationRead
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:*"
        - PolicyName: AllowLambdaToWriteLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*"
              - Sid: AllowLambdaToCreateLogGroups
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
        - PolicyName: KMSEncrypt
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                Resource: !GetAtt 'KMSKey.Arn'
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref ParamS3Bucket
        S3Key: !Ref ParamS3Key
      Description: 'Lambda to encrypt an environment variable'
      FunctionName: !Sub "aws-lambda-${AWS::StackName}"
      Handler: 'lambda_function.lambda_handler'
      MemorySize: 128
      Role:
        Fn::GetAtt: LambdaEncryptionRole.Arn
      Runtime: python3.7
      Timeout: 60
  EncrypterResource:
    Type: "Custom::Encrypter"
    Properties:
      ServiceToken: !GetAtt LambdaFunction.Arn
      varToEncrypt: !Ref ParamVarToEncrypt
      key: !Ref KMSKey
    DependsOn: LambdaFunction
Outputs:
  EncryptedEnvVar:
    Value: !GetAtt EncrypterResource.var